# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def math(a, b):
    try:
        res = round(a/b, 2)
        return res

    except ZeroDivisionError:

        print('Деление на ноль запрещено')


a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
print(math(a, b))

# 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.

def user_info(user_name=input('Введите имя: '), lastname=input('Введите фамилию: '),
              birthd_year=input('Введите год рождения: '), city=input('Введите город проживания: '),
              email=input('Введите электронную почту: '), phone_number=input('Введите номер телефона: ')):
    print(
        f'Имя пользователя: {user_name}, Фамилия поьзователя:  {lastname}, Год рождения пользователя: {birthd_year}, Город проживания пользователя: {city}, Электронный адрес пользователя: {email},Телефон пользователя: {phone_number}')
    return

user_info()

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def my_func(a, b, c):
    user_list = [a, b, c]
    num = min(user_list)

    for i in range(len(user_list)):
        if user_list[i] == num:
            user_list.pop(i)
            print(sum(user_list))
            break
a = int(input('Первое число: '))
b = int(input('Второе число: '))
c = int(input('Третье число: '))
my_func(a, b, c)

# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
# var1
def my_func(x, y):
    print(1/x**abs(y))

x = int(input('Веедите действительное положительное число: '))
y = int(input('Введите целое отрицательное число: '))
my_func(x, y)

# var2
def my_func(x, y):
    res = x
    count = 1
    while True:
        count += 1
        res = res*x
        if count == abs(y):
            break
    print(1/res)
x = int(input('Веедите действительное положительное число: '))
y = int(input('Введите целое отрицательное число: '))
my_func(x, y)

# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.


def sum_of_list():
    while True:
        update_list = []
        while True:
            user_list = input('Введите числа через пробел: ').split()
            for i in range(len(user_list)):
                try:
                    if user_list[i] == 'stop':
                        sum(update_list)
                        print(sum(update_list))
                        return
                    else:
                        num = int(user_list[i])
                        update_list.append(num)
                        sum(update_list)
                except ValueError:
                    print('Вводим только числа')
            print(sum(update_list))
sum_of_list()

#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
def inc_func(A):
    A = print((A).title())
    return A
inc_func('word')

#выводим все слова с заглавной буквы
def int_func():
    user_words = input('Введите слова, разделенные пробелом: ').title()
    print(user_words)
int_func()

