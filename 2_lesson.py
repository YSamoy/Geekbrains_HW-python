#1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
mood = "qiute good"
list = ['sun', 12.03, ['Europe', 'USA'], '**-%-|', 234]
for el in list:
    print(type(el))

#2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно использовать функцию input().
Userlist = input('Введите список: ').split()
newList = list(Userlist)
for el in range(0, len(newList)-1, 2):
    newList[el], newList[el+1] = newList[el+1], newList[el]
print(newList)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и dict.

month = {'зима': [12, 1, 2], 'весна': [3, 4, 5], 'лето': [6, 7, 8], 'осень': [9, 10, 11]}
MonthN = int(input("Введите номер месяца: "))
for i in month:
    if MonthN in month[i]:
        print(i)

MonthN = int(input("Введите номер месяца: "))
months = ["winter", "summer", "fall", "spring"]
if MonthN >= 6 and MonthN <= 8:
    print(months[1])
elif MonthN > 8 and MonthN <= 10:
    print(months[2])
elif MonthN >=3 and MonthN <= 5:
    print(months[3])
else:
    print(months[0])

MonthN = int(input("Введите номер месяца: "))
months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
if MonthN == months[8] or MonthN == months[9] or MonthN == months[10]: #почему не работает запись MonthN == months[8:10]?
    print("Осень")
elif MonthN == months[2] or MonthN == months[3] or MonthN == months[4]:
    print("Весна")
elif MonthN == months[5] or MonthN == months[6] or MonthN == months[7]:
    print('Лето')
else:
    print('Зима')

#4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
user = str(input('Введите любое предложение: ')).split()
user = list(user)
for i, el in enumerate(user, 1):
    print(f"{i} . {el[0:9]}")

#5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

User_rate = int(input("Введите число рейтинга: "))
rate = [100, 4 , 2]

for i in range(len(rate)):
    if User_rate >= rate[i]:
        rate.insert(i, User_rate)
        break
    elif i == len(rate) - 1:
        rate.append(User_rate)
print(rate)

#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
#
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
items = (input("Какие товары были проданы?")).split()
report_list = []
price_report = []
units_report = []
measure_report = []
for i, el in enumerate(items, 1):

    price = int(input(f'Сколько стоил {el}?'))
    units = int(input(f'Сколько штук продали {el}?'))
    measure = input(f'Единица измерения {el}?')
    name = 'название'
    cost = 'цена'
    q = 'количество'
    m = 'единица измерения'
    dict = {name: el, cost: price, q: units, m: measure}
    report_list.append((i, dict))
    price_report.append(price)
    units_report.append(units)
    measure_report.append(measure)
print(report_list)
print({name: items, cost: price_report , q: units_report, m: measure_report })
